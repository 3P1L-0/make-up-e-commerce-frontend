@use 'sass:map';
@use '/src/scss/utility/animations' as anims;
@use '@angular/material' as mat;
@use '/src/scss/variables' as vars;
@use '/src/scss/utility/_utilities' as utils;

@mixin _layout($theme) {
  .main-toolbar {
    @include utils.make-flex($justContent: 'space-between', $alignItems: 'center', $wrap: 'wrap', $gap: '20px');
    min-height: vars.$header-height;
    padding: 10px;

    .left-content {
      @include utils.make-flex($alignItems: 'center', $gap: '18px', $wrap: 'wrap');
      a {
        cursor: pointer;
        margin: 0;
        text-decoration: none;
        font-weight: normal;
        font-size: 16px;

        &:first-child {
          $conf: map.get(mat.get-typography-config($theme), title);

          font-weight: map.get($conf, font-weight);
          font-size: map.get($conf, font-size);
        }

        &:hover,
        &.active {
          border-bottom: 2px solid;
          font-weight: bold;
        }
      }
    }

    .right-content {
      @include utils.make-flex($justContent: 'end', $alignItems: 'center', $gap: '8px');

      .tem-itens .mat-badge-content {
        top: -9px;
        left: -9px;

        // @include anims.pulse-box-shadow(rgb(55, 165, 55));
        @include anims.pulse-overflow();
      }
    }
  }
}

@mixin _color($color) {
  $is-dark: map.get($color, is-dark);
  position: relative;

  box-shadow: map.get($color, background, background) 0 1px;
  z-index: 999;

  .main-toolbar {
    .left-content {
      a {
        color: map.get($color, foreground, text);
      }
    }
  }
}

@mixin theme($theme) {
  $color: mat.get-color-config($theme);

  .header-component {
    @include _layout($theme);
    @include _color($theme);
  }
}
