
@use '../config/variables/variables' as vars;
@use 'sass:string';

%layout-transition {
  will-change: margin, width;
  transition: .4s ease;
  transition-property: margin, width;
}

@mixin make-flex(
  $display: 'flex',
  $direction: 'row',
  $justContent: 'flex-start',
  $alignItems: 'stretch',
  $alignContent: 'stretch',
  $wrap: 'nowrap',
  $gap: '0'
  ) {
  display: string.unquote($display);
  flex-flow: string.unquote($direction) string.unquote($wrap);
  justify-content: string.unquote($justContent);
  align-items: string.unquote($alignItems);
  align-content: string.unquote($alignContent); // only applies if flex-wrap is set to something other than nowrap
  gap: string.unquote($gap);
}

@mixin center-vert() {
  margin: 0;
  position: absolute;
  top: 50%; // sends the box to the end of it's container
  transform: translateY(-50%); // brings the box to the center of it's container
}

@mixin center-all() {
  @include center-vert();
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin make-square($length) {
  width: $length;
  height: $length;
}

@mixin reset-form-field($theme) {
  & {
    min-width: 180px;
  }

  &,
  .mat-form-field-wrapper,
  .mat-form-field-flex {
    height: vars.$switcher-form-fields-height;
    padding: 0;
  }

  .mat-form-field-flex {
    // border-top-right-radius: 0;
    // margin-top: -.36em;
    align-items: center;
  }

  .mat-form-field-infix {
    min-width: 110px;
    width: fit-content;
    padding: 0 10px;
    border-top: 5.83px solid transparent;

    mat-select {
      .mat-select-trigger {
        padding: 0 8px;
      }

      .mat-select-value {
        .mat-select-value-text {
        }
      }
      .mat-select-arrow-wrapper {
        height: auto;
        margin-top: 4px;
        margin-left: 4px;
        vertical-align: bottom;
      }
    }
  }

  .mat-form-field-wrapper {
    .mat-form-field-underline { bottom: initial }
  }

  .mat-form-field-prefix,
  .mat-form-field-suffix {
    right: 0.25em;
  }
}

@mixin expand-body($component-selector) {
  @at-root {
    app-#{$component-selector} {
      display: block;
      min-height: calc(100vh - calc(vars.$header-height + vars.$footer-height));
    }
  }
}
