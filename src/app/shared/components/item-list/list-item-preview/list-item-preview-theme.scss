@use 'sass:map';
@use '@angular/material' as mat;
@use '/src/scss/utility/utilities' as utils;

@mixin _layout($theme)  {
  .preview {
    @include utils.make-flex($alignItems: 'center', $gap: '40px');
    position: relative;
    z-index: 50;

    .left-content {
      width: 150px;
      height: 150px;

      will-change: transform;
      transition: transform 1s ease-in-out;

      &:hover {
        transform: translate(50px, 25px) scale(1.5);
        z-index: 100;
      }
    }

    .middle-content,
    .controls-container {
      @include utils.make-flex($direction: 'column', $gap: '10px');
    }

    .middle-content {
      height: 100%;
      flex: 1 0;

      .title {
        font-variant: small-caps;
        @include _includeFontConfs($theme, 'display-1');
      }

      .bottom-content-wrapper {
        @include utils.make-flex($gap: '20px');

        .detail {
          @include _includeFontConfs($theme, 'title')
        }

        .detail + span {
          margin-left: 8px;
          @include _includeFontConfs($theme, 'body-2')
        }
      }

      .info {
        display: none;

        &.show {
          display: block;
        }
      }
    }

    .controls-container {
      align-items: end;

      .delete {
        will-change: display, margin;
        @include utils.make-flex($gap: '10px');

        & > * {
          display: none;
          overflow: hidden;
        }

        .deleting-controls button:first-child {
          margin-right: 8px;
        }

        .viewing,
        .deleting {
          display: block;
        }
      }
    }
  }
}

@mixin _includeFontConfs($theme: Map, $conf_name: string) {
  $conf: map.get(mat.get-typography-config($theme), $conf_name);

  font-size: map.get($conf, font-size);
  line-height: map.get($conf, line-height);
  font-weight: map.get($conf, font-weight);
}

@mixin _color($color) {

}

@mixin theme($theme) {
  $color: mat.get-color-config($theme);

  .list-item-preview {
    @include _layout($theme);
    @include _color($color);
  }
}
